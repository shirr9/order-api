services:
  db:
    image: postgres:16
    container_name: order-api-db
    env_file:
      - .env
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_PORT=${POSTGRES_PORT}
    ports:
      - "5432:${POSTGRES_PORT}"
    volumes:
      - data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d db"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 10s

  create_user:
    image: postgres:latest
    env_file: ./.env
    environment:
      - DB_USER=${POSTGRES_USER}
      - DB_PASSWORD=${POSTGRES_PASSWORD}
      - DB_NAME=${POSTGRES_DB}
      - DB_PORT=${POSTGRES_PORT}
      - DB_HOST=${POSTGRES_HOST}
      - NEW_USER=${NEW_USER}
      - NEW_USER_PASSWORD=${NEW_USER_PASSWORD}
    volumes:
      - ./create_user.sh:/create_user.sh
    command: bash -c "chmod +x /create_user.sh && /create_user.sh"
    restart: no
    depends_on:
      db:
        condition: service_healthy

  migrator:
    image: migrate/migrate:4
    container_name: order-api-migrator
    env_file:
      - .env
    environment:
      DATABASE_URL: ${DATABASE_URL}
      USER_URL: ${USER_URL}
    command: [ "-database", "${USER_URL}",
               "-path", "/migrations",
               "up"]
    volumes:
      - ./db/migrations:/migrations
    restart: no
    depends_on:
      db:
        condition: service_healthy
      create_user:
        condition: service_completed_successfully
volumes:
  data: